{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar json_rpc_provider_1 = require(\"./json-rpc-provider\");\n\nvar networks_1 = require(\"../utils/networks\");\n\nvar properties_1 = require(\"../utils/properties\");\n\nvar errors = __importStar(require(\"../utils/errors\"));\n\nvar InfuraProvider =\n/** @class */\nfunction (_super) {\n  __extends(InfuraProvider, _super);\n\n  function InfuraProvider(network, apiAccessToken) {\n    var _this = this;\n\n    network = networks_1.getNetwork(network == null ? 'homestead' : network);\n    var host = null;\n\n    switch (network.name) {\n      case 'homestead':\n        host = 'mainnet.infura.io';\n        break;\n\n      case 'ropsten':\n        host = 'ropsten.infura.io';\n        break;\n\n      case 'rinkeby':\n        host = 'rinkeby.infura.io';\n        break;\n\n      case 'kovan':\n        host = 'kovan.infura.io';\n        break;\n\n      default:\n        throw new Error('unsupported network');\n    }\n\n    _this = _super.call(this, 'https://' + host + '/' + (apiAccessToken || ''), network) || this;\n    errors.checkNew(_this, InfuraProvider);\n    properties_1.defineReadOnly(_this, 'apiAccessToken', apiAccessToken || null);\n    return _this;\n  }\n\n  InfuraProvider.prototype._startPending = function () {\n    console.log('WARNING: INFURA does not support pending filters');\n  };\n\n  InfuraProvider.prototype.getSigner = function (address) {\n    errors.throwError('INFURA does not support signing', errors.UNSUPPORTED_OPERATION, {\n      operation: 'getSigner'\n    });\n    return null;\n  };\n\n  InfuraProvider.prototype.listAccounts = function () {\n    return Promise.resolve([]);\n  };\n\n  return InfuraProvider;\n}(json_rpc_provider_1.JsonRpcProvider);\n\nexports.InfuraProvider = InfuraProvider;","map":null,"metadata":{},"sourceType":"script"}